#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\makeatother
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Performance Report on EC2 Instances for Memory Operations
\end_layout

\begin_layout Author
Vineet Kumar, Phuc Xuan Nguyen
\end_layout

\begin_layout Section
RAM Access Time
\end_layout

\begin_layout Section
RAM Bandwidth
\end_layout

\begin_layout Section
Page Fault Service Time :
\end_layout

\begin_layout Description
a) Prediction :- To estimate page fault service time we wanted to measure
 raw time of reading a page from disk.
 This is hard to do from user space - but we can measure tiem to read a
 file without using page cache.
 This would still include an overhead of copying data between buffers -
 so while making an estimate we should note that this estimate at best would
 be upper bound on page fault service time.
 
\end_layout

\begin_layout Itemize
We measure the time to do a disk read by measuring cost of doing a direct
 read using 'dd' and redirecting output to /dev/null
\end_layout

\begin_layout Itemize
We notice that this gives us a speed of 5.1 MB/s -> Note that this is a gross
 underestimate - it includes time to copy data between buffers
\end_layout

\begin_layout Itemize
Based on the clock speed and bandwidth and page size - we estimate that
 around 2.1 million cycles will be needed
\end_layout

\begin_layout Description
b) Experiment :- Our aim is to measure the page fault service time.
 This means we want to measure the time it takes to do a major page fault.
 This includes the time needed to bring the page from the disk.
 We use an mmap (followed by no read aheads) to measure the same.
 This works as mmap does a on demand page fault.
 Page is faulted in only on first access.
 Below is a detailed description of our experiment :
\end_layout

\begin_layout Itemize
Create a Large File ( > 1.5 G) using a simple dd tool
\end_layout

\begin_layout Itemize
Determine page size by calling 'getconf PAGESIZE' - This gives us page size
 of 4096 bytes or 4K on our system
\end_layout

\begin_layout Itemize
Call a posix_fadvise with flag FADVISE_DONTNEED.
 We do this to make sure that a page is always brought in from the disk
 and not cached.
 This is equivalent of dropping the page cache (by calling echo 1 > /proc/sys/vm
/drop_cache) 
\end_layout

\begin_layout Itemize
Memory Map the file using 'mmap' system call with flags 'MAP_PRIVATE'.
 We do this as we just want to do a read on the file.
\end_layout

\begin_layout Itemize
Do a madvise on the memory mapped area using MADV_RANDOM.
 Do tests both with and without MADV_RANDOM
\end_layout

\begin_layout Itemize
Start timer
\end_layout

\begin_layout Itemize
Access a random page by reading a page address.
 This will cause a major page fault.
\end_layout

\begin_layout Itemize
End timer.
 Report the time between start and end of timer.
\end_layout

\begin_layout Description
c) Results : The table below shows results for reading one page (4096) .
 Column 1 and 2 show results without madvise and Columns 3 and 4 show results
 with madvise
\end_layout

\begin_layout Description
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avg.
 CPU Cycles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Std.
 Deviation(CPU Cycles)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Page Fault (w/o) madvise
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
58,578
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.7625%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21ms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Page Fault (with) madvise
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
197,190
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1898%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
73 ms
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Description
d) Analysis :-
\end_layout

\begin_layout Itemize
Our estimate was 2.1 Million CPU Cycles and what we got was 0.2 Million cycles.
 As explained above, our estimate had some overhead due to copying of data
 between buffers.
 Thus we expected the actual time to be smaller
\end_layout

\begin_layout Itemize
Its interesting to note that if we dont give an madvise 'advice' for our
 memory map region, we get better numbers.
 But those numbers are most likely incorrect.
 We think if we dont do madvise, we hit pages in page cache and thus the
 fault time does not remain as major page fault service rate.
\end_layout

\begin_layout Itemize
To conclude, to measure page fault service rate, we need to ensure that
 the page is brough in by reading from disk
\end_layout

\end_body
\end_document
